name: End-to-End Tests
on:
  push:
    branches-ignore:
      - main
    paths:
      - 'backend/**'
      - 'frontend/**'

  workflow_call:

jobs:
  e2e-tests:
    runs-on: ubuntu-latest

    env:
      DB_HOST: 127.0.0.1
      DB_PORT: 5432
      DB_DATABASE: plantogether
      DB_USER: postgres
      DB_PASSWORD: postgres

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ env.DB_DATABASE }}
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Set up database
        env:
          PGPASSWORD: ${{ env.DB_PASSWORD }}
        run: |
          psql -h $DB_HOST -U $DB_USER -d $DB_DATABASE -f ./database/03_create_tables.sql
          psql -h $DB_HOST -U $DB_USER -d $DB_DATABASE -f ./database/04_insert_data.sql

      - name: Verify data insertion
        env:
          PGPASSWORD: ${{ env.DB_PASSWORD }}
        run: |
          psql -h $DB_HOST -U $DB_USER -d $DB_DATABASE -c "SELECT email, password_hash, account_member.id_member, id_family FROM account_member INNER JOIN member ON account_member.id_member = member.id_member WHERE email = 'diddy_kong@banana.com';"

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm ci

      - name: Start backend
        working-directory: ./backend
        run: npm run start &

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Start frontend
        working-directory: ./frontend
        run: npm run dev &

      - name: Check if backend is ready
        run: |
          echo "Check if backend is ready"
          until curl -s http://localhost:3000/health; do sleep 5; done

      - name: Check if frontend is ready
        run: |
          echo "Check if frontend is ready"
          until curl -s http://localhost:5173; do sleep 5; done

      - name: Install Xvfb
        run: sudo apt-get install -y xvfb

      - name: Run end-to-end tests
        working-directory: ./frontend
        run: xvfb-run --auto-servernum npm test -- --env chrome
